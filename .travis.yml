language: node_js

node_js:
  - 10

services:
  - docker

branches:
  only:
    - master

env:
     - AWS_ECR_API="132819300562.dkr.ecr.us-east-1.amazonaws.com/arquichatdocker"
    

install:
  - docker-compose build

script:
  - docker-compose up -d
  - sed -i -e 's/\r$/\n/' Scripts/start.sh
  - sed -i -e 's/\r$/\n/' Scripts/stop.sh
  - sed -i -e 's/\r$/\n/' Scripts/install.sh
  - zip -r latest *
  - mkdir -p dpl_cd_upload
  - mv latest.zip dpl_cd_upload/latest.zip

after_succes:
  - docker --version
  - pip install --user awscli
  - export PATH=$PATH:$HOME/.local/bin
  - eval $(aws ecr get-login --region us-east-1 --no-include-email) 
  - docker build -t $AWS_ECR_API:latest .
  - docker tag $AWS_ECR_API:latest
  - docker push $AWS_ECR_API:latest
  - docker images

deploy:
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_ACCESS_SECRET_KEY
    local_dir: dpl_cd_upload
    skip_cleanup: true
    bucket: travis-bucket-arquichat
    upload_dir: latest
  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_ACCESS_SECRET_KEY
    bucket: travis-bucket-arquichat
    key: latest/latest.zip
    bundle_type: zip
    application: grupo4chat
    deployment_group: arquichat
    wait_until_deployed: true
    on: 
      branch: master