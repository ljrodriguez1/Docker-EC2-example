version: '3'

services:
  authjs:
    build:
      context: .
      dockerfile: Dockerfile
    image: authjs
    command: node auth.js
    volumes:
      - .:/home/authjs/app
      - /home/authjs/app/node_modules
    container_name: authjs
    restart: unless-stopped
    env_file: .env
    ports:
     - "5000:5000"
    environment:
    - MONGO_USERNAME=$MONGO_USERNAME
    - MONGO_PASSWORD=$MONGO_PASSWORD
    - MONGO_HOSTNAME=db
    - MONGO_PORT=$MONGO_PORT
    - MONGO_DB=$MONGO_DB
    depends_on: 
      - db
    networks:
      - app-network
  nodejs:
    build:
      context: .
      dockerfile: Dockerfile
    image: nodejs
    command: npm run dev
    volumes:
      - .:/home/nodejs/app
      - /home/nodejs/app/node_modules
    container_name: nodejs
    restart: unless-stopped
    env_file: .env
    ports:
        # Service will be accessible on the host at port 8080.
      - "8080:${PORT:-8080}"
    environment:
      - MONGO_USERNAME=$MONGO_USERNAME
      - MONGO_PASSWORD=$MONGO_PASSWORD
      - MONGO_HOSTNAME=db
      - MONGO_PORT=$MONGO_PORT
      - MONGO_DB=$MONGO_DB
    depends_on: 
        - db
    networks:
      - app-network
  redis:
    image: redis
    container_name: cache
    expose:
      - 6379
    networks: 
      - app-network
  db:
    image: mongo:4.1.8-xenial
    container_name: db
    restart: unless-stopped
    env_file: .env
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_PASSWORD
    volumes:  
      - dbdata:/data/db   
    networks:
      - app-network

volumes:
  dbdata:


networks:
  app-network:
    driver: bridge
